<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.7">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2020-07-20T12:39:50-04:00</updated><id>/feed.xml</id><title type="html">ryleelyman.github.io</title><subtitle>Website / Blog</subtitle><entry><title type="html">Two Approaches To The Cotangent Space</title><link href="/2020/07/10/Two-Approaches-to-the-Cotangent-Space.html" rel="alternate" type="text/html" title="Two Approaches To The Cotangent Space" /><published>2020-07-10T00:00:00-04:00</published><updated>2020-07-10T00:00:00-04:00</updated><id>/2020/07/10/Two-Approaches-to-the-Cotangent-Space</id><content type="html" xml:base="/2020/07/10/Two-Approaches-to-the-Cotangent-Space.html">&lt;p&gt;There is a “sheaf-theoretic” definition of something like a &lt;em&gt;cotangent space at a point&lt;/em&gt;
for a locally-ringed space.
In the case of the sheaf of differentiable functions on a smooth manifold,
the two definitions—sheaf-theoretic and the usual one in differential geometry—agree.
What’s more, modulo the appropriate background technology in both subjects,
the proof is beautiful and simple—I feel like shouting it from the rooftops
at the moment, so this blog post will try and give a little exposition.
I’ll try to move briskly without assuming total familiarity with either side of things.&lt;/p&gt;

&lt;h2 id=&quot;the-algebraic-cotangent-space&quot;&gt;The Algebraic Cotangent Space&lt;/h2&gt;

&lt;p&gt;Let &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; be a smooth manifold of dimension &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;.
The &lt;em&gt;sheaf&lt;/em&gt; of differentiable functions on &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; is a
contravariant functor from the category of open subsets of &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; to the category of rings
that assigns to an open set &lt;script type=&quot;math/tex&quot;&gt;U&lt;/script&gt;
the ring &lt;script type=&quot;math/tex&quot;&gt;\mathscr{O}(U)&lt;/script&gt; of differentiable functions &lt;script type=&quot;math/tex&quot;&gt;f\colon U \to \mathbb{R}&lt;/script&gt;—addition
and multiplication in &lt;script type=&quot;math/tex&quot;&gt;\mathscr{O}(U)&lt;/script&gt; are done pointwise in &lt;script type=&quot;math/tex&quot;&gt;\mathbb{R}&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;The sheaf is not so important for us;
what we are interested in today are the &lt;em&gt;stalks.&lt;/em&gt;
The idea is that elements of the &lt;em&gt;stalk,&lt;/em&gt;
called &lt;em&gt;germs,&lt;/em&gt; capture the “infinitesimal behavior”
of smooth functions at a point.
Here is the formal definition.
Given a point &lt;script type=&quot;math/tex&quot;&gt;p \in X&lt;/script&gt;, 
the &lt;em&gt;stalk&lt;/em&gt; of &lt;em&gt;germs&lt;/em&gt; of smooth functions at &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt; is the ring&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\mathscr{O}_p = \{(f,U) : f \in \mathscr{O}(U),\ p\in U \}/\sim.&lt;/script&gt;

&lt;p&gt;The equivalence relation &lt;script type=&quot;math/tex&quot;&gt;\sim&lt;/script&gt; is defined as follows:
we say &lt;script type=&quot;math/tex&quot;&gt;(f,U) \sim (g,V)&lt;/script&gt; if there exists an open neighborhood
&lt;script type=&quot;math/tex&quot;&gt;U' \subset U \cap V&lt;/script&gt; such that &lt;script type=&quot;math/tex&quot;&gt;f|_{U'} = g|_{U'}&lt;/script&gt;.
The equivalence class of &lt;script type=&quot;math/tex&quot;&gt;(f,U)&lt;/script&gt; is its &lt;em&gt;germ.&lt;/em&gt;
The ring &lt;script type=&quot;math/tex&quot;&gt;\mathscr{O}_p&lt;/script&gt; is the direct limit of the &lt;script type=&quot;math/tex&quot;&gt;\mathscr{O}(U)&lt;/script&gt;
as &lt;script type=&quot;math/tex&quot;&gt;U&lt;/script&gt; varies over the open neighborhoods of &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Notice that there is a surjection &lt;script type=&quot;math/tex&quot;&gt;\mathscr{O}_p \to \mathbb{R}&lt;/script&gt;
that sends the germ of &lt;script type=&quot;math/tex&quot;&gt;f&lt;/script&gt; at &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt; to &lt;script type=&quot;math/tex&quot;&gt;f(p)\in \mathbb{R}&lt;/script&gt;.
The definition is independent of the choice of representative &lt;script type=&quot;math/tex&quot;&gt;f&lt;/script&gt;.
Since &lt;script type=&quot;math/tex&quot;&gt;\mathbb{R}&lt;/script&gt; is a field, the kernel of the map
is a maximal ideal; let’s call it &lt;script type=&quot;math/tex&quot;&gt;\mathfrak{m}_p&lt;/script&gt;.
Observe that 
&lt;script type=&quot;math/tex&quot;&gt;\mathfrak{m}_p/\mathfrak{m}_p^2&lt;/script&gt; is a module over
&lt;script type=&quot;math/tex&quot;&gt;\mathscr{O}_p/\mathfrak{m}_p \cong \mathbb{R}&lt;/script&gt;, 
i.e. a real vector space;
we will call it the &lt;em&gt;algebraic cotangent space at &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-usual-cotangent-space&quot;&gt;The Usual Cotangent Space&lt;/h2&gt;

&lt;p&gt;We retain our manifold &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; and point &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt; from the previous section.
The &lt;em&gt;tangent space at &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;,&lt;/em&gt; denoted &lt;script type=&quot;math/tex&quot;&gt;T_pX&lt;/script&gt;
can be thought of as the space of “directions” in &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; at &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;.
This is made precise by defining it to be the space of
directional &lt;em&gt;derivatives&lt;/em&gt; at &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;.
I won’t attempt to make this more precise, except to note that
after we choose local coordinates &lt;script type=&quot;math/tex&quot;&gt;(x_1,\dotsc,x_n)&lt;/script&gt; near &lt;script type=&quot;math/tex&quot;&gt;p = (p_1,\dotsc,p_n)&lt;/script&gt;,
a basis for &lt;script type=&quot;math/tex&quot;&gt;T_pX&lt;/script&gt; is given by&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{\partial}{\partial x_1}\bigg|_p,\dotsc, \frac{\partial}{\partial x_n}\bigg|_p.&lt;/script&gt;

&lt;p&gt;The &lt;em&gt;cotangent space,&lt;/em&gt; which we are more interested in, is the
&lt;em&gt;dual&lt;/em&gt; of the tangent space and is denoted &lt;script type=&quot;math/tex&quot;&gt;T_p^\ast X&lt;/script&gt;.
Elements of the cotangent space are &lt;em&gt;linear functionals&lt;/em&gt; on tangent vectors.
Given coordinates &lt;script type=&quot;math/tex&quot;&gt;x_1,\dotsc,x_n&lt;/script&gt;,
the &lt;em&gt;dual basis&lt;/em&gt; of the cotangent space is given by&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;dx_1,\dotsc, dx_n,&lt;/script&gt;

&lt;p&gt;so we have &lt;script type=&quot;math/tex&quot;&gt;dx_i\left( \frac{\partial}{\partial x_j}|_p\right)&lt;/script&gt; equal to &lt;script type=&quot;math/tex&quot;&gt;1&lt;/script&gt;
when &lt;script type=&quot;math/tex&quot;&gt;i = j&lt;/script&gt; and equal to &lt;script type=&quot;math/tex&quot;&gt;0&lt;/script&gt; otherwise.
(There perhaps ought to be some notational inclusion of the point &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;,
but we will suppress this.)&lt;/p&gt;

&lt;h2 id=&quot;the-algebraic-cotangent-space-agrees-with-the-usual-one&quot;&gt;The Algebraic Cotangent Space Agrees With the Usual One&lt;/h2&gt;

&lt;p&gt;If &lt;script type=&quot;math/tex&quot;&gt;f&lt;/script&gt; is a smooth function on an open neighborhood of &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;
satisfying &lt;script type=&quot;math/tex&quot;&gt;f(p) = 0&lt;/script&gt;,
abusing notation, we shall write the corresponding element of
&lt;script type=&quot;math/tex&quot;&gt;\mathfrak{m}_p/\mathfrak{m}_p^2&lt;/script&gt;
as &lt;script type=&quot;math/tex&quot;&gt;f + \mathfrak{m}_p^2&lt;/script&gt;.
Given such an element,
I claim we can interpret &lt;script type=&quot;math/tex&quot;&gt;f&lt;/script&gt; as a linear functional on tangent vectors at &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;
by sending a tangent vector &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; to the value of the derivative of &lt;script type=&quot;math/tex&quot;&gt;f&lt;/script&gt; at &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt; in the direction &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt;.
For instance, in local coordinates &lt;script type=&quot;math/tex&quot;&gt;(x_1,\dotsc,x_n)&lt;/script&gt;,
the vector &lt;script type=&quot;math/tex&quot;&gt;\frac{\partial}{\partial x_i}|_p&lt;/script&gt; is sent to &lt;script type=&quot;math/tex&quot;&gt;\frac{\partial f}{\partial x_i}(p)&lt;/script&gt;.
Extending linearly defines a linear functional on &lt;script type=&quot;math/tex&quot;&gt;T_pX&lt;/script&gt;,
which we shall denote &lt;script type=&quot;math/tex&quot;&gt;df_p&lt;/script&gt;.
The value of the directional derivative of a function depends only on its germ
essentially by definition,
and the product rule from calculus tells us that the assignment
&lt;script type=&quot;math/tex&quot;&gt;f \mapsto df_p&lt;/script&gt; sends elements of &lt;script type=&quot;math/tex&quot;&gt;\mathfrak{m}_p^2&lt;/script&gt; to the zero functional.
The linearity of the derivative implies that &lt;script type=&quot;math/tex&quot;&gt;\mathbb{R}&lt;/script&gt;-linear combinations
of germs are sent to &lt;script type=&quot;math/tex&quot;&gt;\mathbb{R}&lt;/script&gt;-linear combinations of functionals,
so the assignment&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;f + \mathfrak{m}_p^2 \mapsto df_p&lt;/script&gt;

&lt;p&gt;really defines a map &lt;script type=&quot;math/tex&quot;&gt;\mathfrak{m}_p/\mathfrak{m}_p^2 \to T_p^\ast X&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;We claim this map is an isomorphism, for which it suffices to define an inverse.
Choose local coordinates &lt;script type=&quot;math/tex&quot;&gt;\vec x = (x_1,\dotsc,x_n)&lt;/script&gt; around &lt;script type=&quot;math/tex&quot;&gt;\vec p = (p_1,\dotsc,p_n)&lt;/script&gt;.
A general element &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;T_p^\ast X&lt;/script&gt;
may be written as the linear combination
&lt;script type=&quot;math/tex&quot;&gt;\alpha = a_1\mathop{dx_1} + \dotsb + a_n\mathop{dx_n}.&lt;/script&gt;
Write &lt;script type=&quot;math/tex&quot;&gt;\vec a = (a_1,\dotsc,a_n)&lt;/script&gt;.
The function &lt;script type=&quot;math/tex&quot;&gt;f_\alpha&lt;/script&gt; defined as&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;f_\alpha(\vec x) = \vec a\cdot(\vec x - \vec p)&lt;/script&gt;

&lt;p&gt;clearly has germ belonging to &lt;script type=&quot;math/tex&quot;&gt;\mathfrak{m}_p&lt;/script&gt;,
and tracing the double composition,
we see that we have &lt;script type=&quot;math/tex&quot;&gt;a \mapsto f_\alpha + \mathfrak{m}_p^2 \mapsto d(f_\alpha)_p = \alpha&lt;/script&gt;.
This map will be an isomorphism as soon as we can show that the germ of
&lt;script type=&quot;math/tex&quot;&gt;f - f_{df_p}&lt;/script&gt; belongs to &lt;script type=&quot;math/tex&quot;&gt;\mathfrak{m}_p^2&lt;/script&gt;, i.e.
can be written as &lt;script type=&quot;math/tex&quot;&gt;g_1h_1 + \dotsb g_kh_k&lt;/script&gt; for some
smooth functions &lt;script type=&quot;math/tex&quot;&gt;g_i&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;h_i&lt;/script&gt; whose germs belong to &lt;script type=&quot;math/tex&quot;&gt;\mathfrak{m}_p&lt;/script&gt;.
This is the statement of Taylor’s theorem!&lt;/p&gt;

&lt;p&gt;Even better, the map &lt;script type=&quot;math/tex&quot;&gt;\mathfrak{m}_p/\mathfrak{m}_p^2 \to T_p^\ast X&lt;/script&gt;
is a &lt;em&gt;natural isomorphism,&lt;/em&gt; in the sense that given a smooth map
&lt;script type=&quot;math/tex&quot;&gt;\varphi\colon X \to Y&lt;/script&gt; of smooth manifolds such that
&lt;script type=&quot;math/tex&quot;&gt;\varphi(p) = q&lt;/script&gt;, the following diagram commutes&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\require{AMScd}
	\begin{CD}
		\mathfrak{m}_q/\mathfrak{m}_q^2 @&gt;{\cong}&gt;&gt; T_q^\ast Y \\
		@VV{\varphi^\ast}V @VV{\varphi^\ast}V \\
		\mathfrak{m}_p/\mathfrak{m}_p^2 @&gt;{\cong}&gt;&gt; T_p^\ast X.
	\end{CD}&lt;/script&gt;

&lt;p&gt;To verify this, we shall follow an element &lt;script type=&quot;math/tex&quot;&gt;f + \mathfrak{m}_q^2&lt;/script&gt;
around the diagram&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{CD}
		f + \mathfrak{m}^2_q @&gt;&gt;&gt; df_q \\
		@VVV @VVV \\
		f\varphi + \mathfrak{m}_p^2 @&gt;&gt;&gt; d(f\varphi)_p = \mathop{df_q}\mathop{d\varphi_p},
	\end{CD}&lt;/script&gt;

&lt;p&gt;and the fact that equality holds is the multi-variable chain rule!&lt;/p&gt;

&lt;p&gt;Having exploited our knowledge of undegraduate calculus to prove a satisfying
natural isomorphism,
I’ll leave you with one final reason this proof excites me.
If we had wanted to, we could have replaced “differentiable” with “continuous”
in our definition of the algebraic cotangent space,
and we would still end up with a real vector space associated to every stalk.
In some sense, I guessed that this says that the only reason one never speaks of a (co)tangent
space associated to a point in a general topological space is that
there’s no reason—like Taylor’s theorem—for the space to be finite-dimensional!&lt;/p&gt;

&lt;p&gt;Actually, the truth is slightly more subtle:
every continuous function has a continuous “square root” in the sense
that we can always write &lt;script type=&quot;math/tex&quot;&gt;f(x) = \operatorname{sgn}(f(x))\sqrt{f(x)}\sqrt{f(x)}&lt;/script&gt;,
and the functions &lt;script type=&quot;math/tex&quot;&gt;\sqrt{f}&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\operatorname{sgn}(f)\sqrt(f)&lt;/script&gt; are continuous.
Therefore it is &lt;script type=&quot;math/tex&quot;&gt;\mathfrak{m}_p&lt;/script&gt; that is infinite-dimensional,
while &lt;script type=&quot;math/tex&quot;&gt;\mathfrak{m}_p/\mathfrak{m}_p^2 = 0&lt;/script&gt;.
(Thanks to Curtis Heberle and Christopher Davis for pointing out my error!)&lt;/p&gt;</content><author><name></name></author><summary type="html">There is a “sheaf-theoretic” definition of something like a cotangent space at a point for a locally-ringed space. In the case of the sheaf of differentiable functions on a smooth manifold, the two definitions—sheaf-theoretic and the usual one in differential geometry—agree. What’s more, modulo the appropriate background technology in both subjects, the proof is beautiful and simple—I feel like shouting it from the rooftops at the moment, so this blog post will try and give a little exposition. I’ll try to move briskly without assuming total familiarity with either side of things.</summary></entry><entry><title type="html">Orbifolds Day One</title><link href="/2020/07/05/Orbifolds-Day-One.html" rel="alternate" type="text/html" title="Orbifolds Day One" /><published>2020-07-05T00:00:00-04:00</published><updated>2020-07-05T00:00:00-04:00</updated><id>/2020/07/05/Orbifolds-Day-One</id><content type="html" xml:base="/2020/07/05/Orbifolds-Day-One.html">&lt;p&gt;I wrote &lt;a href=&quot;/assets/pdfs/OrbifoldNotes1.pdf&quot;&gt;some notes&lt;/a&gt; introducing orbifolds from Haefliger’s perspective in &lt;em&gt;Metric Spaces of Non-positive Curvature&lt;/em&gt;.
There is some surprisingly heavy machinery that goes into it.
In this blog post I want to talk a little about it at a high level.&lt;/p&gt;

&lt;p&gt;An &lt;em&gt;orbifold&lt;/em&gt; of dimension &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; is a Hausdorff space locally modeled on &lt;script type=&quot;math/tex&quot;&gt;\mathbb{R}^n&lt;/script&gt; modulo
the action of a finite group.
This is a simple enough idea on its face:
a useful perspective on the fundamental group of a manifold 
is the passage between its action on the universal cover
and the calculus of loops in the base space.
For a group &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; that acts merely properly discontinuously and not freely,
the quotient space is no longer a manifold,
and yet we would like to accesss the “loops” perspective regardless.
This is the idea that orbifolds are trying to capture.
It is maybe surprising both how successful this project is,
and yet how much more complex the theory becomes.&lt;/p&gt;

&lt;p&gt;Let’s remember back to when we learned Calculus.
First we learned how to manipulate real-valued functions of one variable,
and later multivariable functions &lt;script type=&quot;math/tex&quot;&gt;f\colon \mathbb{R}^m \to \mathbb{R}^n&lt;/script&gt;.
In particular, we defined a notion of differentiability for these maps.
To replicate this effort on differentiable manifolds,
one uses &lt;em&gt;charts.&lt;/em&gt; The idea is that the local structure of a manifold &lt;script type=&quot;math/tex&quot;&gt;M&lt;/script&gt;
can be captured by a map &lt;script type=&quot;math/tex&quot;&gt;\varphi\colon U \to M&lt;/script&gt;, where &lt;script type=&quot;math/tex&quot;&gt;U&lt;/script&gt; is an
open subset of &lt;script type=&quot;math/tex&quot;&gt;\mathbb{R}^n&lt;/script&gt;.
A map of manifolds &lt;script type=&quot;math/tex&quot;&gt;f\colon M \to N&lt;/script&gt; is &lt;em&gt;defined&lt;/em&gt; to be differentiable
if its expression in any pair of charts is differentiable.&lt;/p&gt;

&lt;p&gt;A ridiculously maximalist approach to this idea is the following:
suppose &lt;script type=&quot;math/tex&quot;&gt;(U_i,\varphi_i)_{i\in I}&lt;/script&gt; is an &lt;em&gt;atlas&lt;/em&gt; for &lt;script type=&quot;math/tex&quot;&gt;M&lt;/script&gt;
(in the usual sense), and that &lt;script type=&quot;math/tex&quot;&gt;(V_j,\psi_j)_{j\in J}&lt;/script&gt;
is an atlas for &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt;.
A function &lt;script type=&quot;math/tex&quot;&gt;f\colon M \to N&lt;/script&gt;
defines a map &lt;script type=&quot;math/tex&quot;&gt;f_{ij}\colon U_i \to V_j&lt;/script&gt;
whenever &lt;script type=&quot;math/tex&quot;&gt;f\varphi_i(U_i) \subset \psi_j(V_j)&lt;/script&gt;.
By refining the open cover of &lt;script type=&quot;math/tex&quot;&gt;M&lt;/script&gt;, we can assume this is always the case.
We can do the following strange thing:
the disjoint union &lt;script type=&quot;math/tex&quot;&gt;U = \coprod_{i\in I}U_i&lt;/script&gt;
is a differentiable manifold, each of whose components is an open subset of &lt;script type=&quot;math/tex&quot;&gt;\mathbb{R}^m&lt;/script&gt;,
and the resulting map &lt;script type=&quot;math/tex&quot;&gt;\varphi = \coprod_{i\in I}\varphi_i&lt;/script&gt; is differentiable
(in fact a local diffeomorphism).
The maps &lt;script type=&quot;math/tex&quot;&gt;f_{ij}&lt;/script&gt; assemble into a map &lt;script type=&quot;math/tex&quot;&gt;F\colon U \to V&lt;/script&gt; such that the following diagram commutes&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\require{AMScd}\begin{CD} U @&gt;F&gt;&gt; V \\ @VV\varphi V @VV\psi V \\ M @&gt;f&gt;&gt; N. \end{CD}&lt;/script&gt;

&lt;p&gt;And we are justified in saying that &lt;script type=&quot;math/tex&quot;&gt;f&lt;/script&gt; is differentiable when there exists
a map &lt;script type=&quot;math/tex&quot;&gt;F&lt;/script&gt; constructed as above.
What we have done, essentially, is said that we don’t understand the quotient manifold,
but we &lt;em&gt;do&lt;/em&gt; understand open subsets of &lt;script type=&quot;math/tex&quot;&gt;\mathbb{R}^m&lt;/script&gt;, and have performed
a non-unique but useful construction to exploit that understanding.
This is the jumping-off point for orbifolds.&lt;/p&gt;

&lt;p&gt;There is just one more wrinkle: 
the definition of an atlas includes various differentiable maps
called &lt;em&gt;changes of charts.&lt;/em&gt; It would be convenient if there
were a way to stipulate that our map &lt;script type=&quot;math/tex&quot;&gt;F&lt;/script&gt; must play nicely with these changes of charts
beyond just saying that there exists a map on the quotient space.
This is where Lie Groupoids come in: they turn out to be precisely the gadget we need
to manage the expression of &lt;script type=&quot;math/tex&quot;&gt;f&lt;/script&gt; in charts while asserting that these expressions
play nicely with the changes of charts.
I’ll let you read the notes—and Haefliger too, hopefully.
Next time I’ll try to wrap my head around the fundamental group of an orbifold,
and hopefully thereafter the mapping class group of an orbifold.&lt;/p&gt;</content><author><name></name></author><summary type="html">I wrote some notes introducing orbifolds from Haefliger’s perspective in Metric Spaces of Non-positive Curvature. There is some surprisingly heavy machinery that goes into it. In this blog post I want to talk a little about it at a high level.</summary></entry><entry><title type="html">Category Theory Day One</title><link href="/2020/02/16/Category-Theory-Day-One.html" rel="alternate" type="text/html" title="Category Theory Day One" /><published>2020-02-16T00:00:00-05:00</published><updated>2020-02-16T00:00:00-05:00</updated><id>/2020/02/16/Category-Theory-Day-One</id><content type="html" xml:base="/2020/02/16/Category-Theory-Day-One.html">&lt;p&gt;My office-mate asked me to give a “second lecture” in category theory
in &lt;a href=&quot;http://www.danielkeliher.com/EminarCurrent.html&quot;&gt;Eminar&lt;/a&gt;, the Tufts graduate student seminar. I gave a first lecture
last semester, but I thought it might be nice to have something to point people
who missed it to, in order to stick to my assignment
and begin at the Yoneda lemma. So, here is yet another rendition of the first
hour of a category theory class.&lt;/p&gt;

&lt;p&gt;The treatment is brisk. To the interested reader,
I would highly recommend Emily Riehl’s &lt;a href=&quot;http://www.math.jhu.edu/~eriehl/context.pdf&quot;&gt;&lt;em&gt;Category Theory in Context&lt;/em&gt;&lt;/a&gt;,
which is the main inspiration here and
has the advantage of being available on the author’s website.
I also recommend Saunders Mac Lane’s 
&lt;em&gt;Category Theory for the Working Mathematician&lt;/em&gt;
and Francis Borceux’s &lt;em&gt;Handbook of Categorical Algebra.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;categories&quot;&gt;Categories&lt;/h2&gt;
&lt;p&gt;A &lt;em&gt;category&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;C&lt;/script&gt; is a collection of &lt;em&gt;objects,&lt;/em&gt; say &lt;script type=&quot;math/tex&quot;&gt;c&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;d&lt;/script&gt;, and 
&lt;em&gt;arrows&lt;/em&gt; between them, say &lt;script type=&quot;math/tex&quot;&gt;f\colon c\to d&lt;/script&gt;.
Given a pair of arrows as below&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\require{AMScd}\begin{CD} a @&gt;f&gt;&gt; b @&gt;g&gt;&gt; c,\end{CD}&lt;/script&gt;

&lt;p&gt;we require the existence of their &lt;em&gt;composition,&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;gf\colon a\to c&lt;/script&gt;.
Composition is associative, and for each object &lt;script type=&quot;math/tex&quot;&gt;c&lt;/script&gt;, there is a
(unique) arrow &lt;script type=&quot;math/tex&quot;&gt;1_c\colon c\to c&lt;/script&gt; which acts as an identity for composition
of arrows.&lt;/p&gt;

&lt;p&gt;Many familiar mathematical objects assemble into categories.
To wit, there is the &lt;em&gt;category of sets,&lt;/em&gt; where objects are sets
and arrows are functions of sets, and the &lt;em&gt;category of topological spaces,&lt;/em&gt;
where objects are topological spaces and arrows are continuous maps.
However, the notion of a category is flexible: not all categories
have “sets with additional structure” as objects.
For instance, a &lt;em&gt;preorder&lt;/em&gt; is the same data as a category
where there is at most one arrow between any two objects.
Here an arrow &lt;script type=&quot;math/tex&quot;&gt;c\to d&lt;/script&gt; should be interpreted as saying &lt;script type=&quot;math/tex&quot;&gt;c\le d&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Note that I use the term &lt;em&gt;collection&lt;/em&gt; advisedly: Russell’s paradox
says that there can be no set of all sets, so the category of
sets has more than a set’s worth of objects! However,
between any two sets, there is only a set’s worth of distinct functions.
That is, if &lt;script type=&quot;math/tex&quot;&gt;a&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;b&lt;/script&gt; are sets, there is a &lt;em&gt;set&lt;/em&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\operatorname{Set}(a,b) = \{f\colon a \to b\}.&lt;/script&gt;

&lt;p&gt;Categories where this is the case for all objects are called &lt;em&gt;locally small.&lt;/em&gt;
If additionally there is only a set’s worth of arrows in the entire category
(and thus only a set’s worth of objects!), the category is called &lt;em&gt;small.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;functors&quot;&gt;Functors&lt;/h2&gt;
&lt;p&gt;If &lt;script type=&quot;math/tex&quot;&gt;C&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;D&lt;/script&gt; are categories, a &lt;em&gt;functor&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;F\colon C \to D&lt;/script&gt;
is an assignment&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{CD}a &amp;\mapsto &amp;Fa \\ @VfVV \mapsto @VVFfV \\ b &amp;\mapsto &amp;Fb.\end{CD} %]]&gt;&lt;/script&gt;

&lt;p&gt;I.e. for each object &lt;script type=&quot;math/tex&quot;&gt;a&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;C&lt;/script&gt;, there is an object &lt;script type=&quot;math/tex&quot;&gt;Fa&lt;/script&gt; in &lt;script type=&quot;math/tex&quot;&gt;D&lt;/script&gt;,
and for each arrow &lt;script type=&quot;math/tex&quot;&gt;f\colon a\to b&lt;/script&gt; in &lt;script type=&quot;math/tex&quot;&gt;C&lt;/script&gt;, there is an arrow
&lt;script type=&quot;math/tex&quot;&gt;Ff\colon Fa\to Fb&lt;/script&gt;. Additionally, &lt;script type=&quot;math/tex&quot;&gt;F&lt;/script&gt; is required to satisfy&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;F1_{a} = 1_{Fa}&lt;/script&gt;

&lt;p&gt;for all &lt;script type=&quot;math/tex&quot;&gt;a&lt;/script&gt; in &lt;script type=&quot;math/tex&quot;&gt;C&lt;/script&gt;, and &lt;script type=&quot;math/tex&quot;&gt;F&lt;/script&gt; must
respect composition in the sense that&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;F(gf) = FgFf.&lt;/script&gt;

&lt;p&gt;Such functors are sometimes called &lt;em&gt;covariant.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Every category &lt;script type=&quot;math/tex&quot;&gt;C&lt;/script&gt; has an &lt;em&gt;opposite category&lt;/em&gt; 
&lt;script type=&quot;math/tex&quot;&gt;\newcommand{\op}{^{\mathrm{op}}}C\op&lt;/script&gt;, which is obtained from
formally reversing the direction of all the arrows.
Thus if &lt;script type=&quot;math/tex&quot;&gt;C&lt;/script&gt; has arrows&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{CD} a @&gt;f&gt;&gt; b @&gt;g&gt;&gt; c,\end{CD}&lt;/script&gt;

&lt;p&gt;then &lt;script type=&quot;math/tex&quot;&gt;C\op&lt;/script&gt; has arrows&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{CD} a @&lt;f\op&lt;&lt; b @&lt;g\op&lt;&lt; c.\end{CD} %]]&gt;&lt;/script&gt;

&lt;p&gt;Any statement about objects and arrows in &lt;script type=&quot;math/tex&quot;&gt;C&lt;/script&gt; has a &lt;em&gt;dual&lt;/em&gt;
statement about objects and arrows in &lt;script type=&quot;math/tex&quot;&gt;C\op&lt;/script&gt;, which is obtained
by reversing the direction of all the arrows.
If the proof of the original statement is categorical,
dualizing the proof yields a proof of the dual statement for &lt;script type=&quot;math/tex&quot;&gt;C\op&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;The definition of a functor admits dualization in &lt;script type=&quot;math/tex&quot;&gt;C&lt;/script&gt; or in &lt;script type=&quot;math/tex&quot;&gt;D&lt;/script&gt;.
The import is essentially the same as long as only one dualization is
performed: the result is a &lt;em&gt;contravariant functor&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;G\colon C\op \to D&lt;/script&gt;:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{CD} a &amp;\mapsto &amp; Ga \\ @VfVV \mapsto @AAGfA \\ b &amp;\mapsto &amp;Gb.
\end{CD} %]]&gt;&lt;/script&gt;

&lt;p&gt;Functors abound in mathematics. Many are so simple that we hardly think about
them: for instance the “forgetful” 
functor from the category of groups and homomorphisms
to sets that sends a group &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; to its set of elements,
and a group homomorphism to its action on underlying sets.&lt;/p&gt;

&lt;p&gt;If &lt;script type=&quot;math/tex&quot;&gt;C&lt;/script&gt; is a locally small category and &lt;script type=&quot;math/tex&quot;&gt;c&lt;/script&gt; is an object,
there are two particularly important functors &lt;script type=&quot;math/tex&quot;&gt;C \to \operatorname{Set}&lt;/script&gt;.
Write &lt;script type=&quot;math/tex&quot;&gt;C(c,b)&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;C(b,c)&lt;/script&gt; for the set of arrows in &lt;script type=&quot;math/tex&quot;&gt;C&lt;/script&gt;
with domain and codomain &lt;script type=&quot;math/tex&quot;&gt;c&lt;/script&gt;, respectively.
If &lt;script type=&quot;math/tex&quot;&gt;f\colon b\to d&lt;/script&gt; is an arrow in &lt;script type=&quot;math/tex&quot;&gt;C&lt;/script&gt;, there are
functions&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;f_*\colon C(c,b) \to C(c,d) \text{ and }f^*\colon C(d,c) \to C(b,c)&lt;/script&gt;

&lt;p&gt;defined as &lt;script type=&quot;math/tex&quot;&gt;f_*(g) = fg&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;f^*(h) = hf&lt;/script&gt;, respectively.
The assignments&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{CD} b &amp;\mapsto &amp; C(c,b) &amp;\qquad\qquad &amp;b &amp;\mapsto &amp; C(b,c) \\
    @VfVV \mapsto @VVf_*V \qquad\qquad @VfVV \mapsto @AAf*A \\
    d &amp;\mapsto &amp;C(c,d) &amp;\qquad\qquad &amp;d &amp;\mapsto &amp; C(d,c)
  \end{CD} %]]&gt;&lt;/script&gt;

&lt;p&gt;define covariant and contravariant functors 
&lt;script type=&quot;math/tex&quot;&gt;C(c,-)\colon C \to \operatorname{Set}&lt;/script&gt; and&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;C(-,c)\colon C\op\to\operatorname{Set}&lt;/script&gt;, respectively.&lt;/p&gt;

&lt;h3 id=&quot;natural-transformations&quot;&gt;Natural Transformations&lt;/h3&gt;
&lt;p&gt;Just as we have defined functors between categories,
it is  useful to consider &lt;em&gt;functor categories,&lt;/em&gt;
whose elements are functors &lt;script type=&quot;math/tex&quot;&gt;C\to D&lt;/script&gt;. To do this, we need 
a  notion of a morphism between functors. It turns out
that the right notion is a &lt;em&gt;natural transformation.&lt;/em&gt;
If &lt;script type=&quot;math/tex&quot;&gt;F,G\colon C \to D&lt;/script&gt; are functors, a natural transformation
&lt;script type=&quot;math/tex&quot;&gt;\eta\colon F\Rightarrow G&lt;/script&gt; is a collection of maps
&lt;script type=&quot;math/tex&quot;&gt;\eta_c\colon Fc \to Gc&lt;/script&gt;, one for each object &lt;script type=&quot;math/tex&quot;&gt;c&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;C&lt;/script&gt;
such that for every arrow &lt;script type=&quot;math/tex&quot;&gt;f\colon c \to d&lt;/script&gt;, the following
diagram commutes&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{CD}
  Fc @&gt;\eta_c&gt;&gt; Gc \\
  @VFfVV @VVGfV \\
  Fd @&gt;\eta_d&gt;&gt; Gd.
\end{CD}&lt;/script&gt;

&lt;p&gt;Any directed path in a diagram of objects and arrows within
a category like the above yields an arrow from the initial 
“vertex” of the path to the terminal one by reading off the
labelled arrows. A diagram &lt;em&gt;commutes&lt;/em&gt; if any two directed
paths with the same endpoints yield equal arrows.
Thus, to say that the above diagram commutes asserts the
equality&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;Gf\eta_c = \eta_d Ff.&lt;/script&gt;

&lt;p&gt;The standard example of a natural transformation is the following.
Let &lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt; be a field, and consider the category of &lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt;-vector spaces
and linear transformations. There is a contravariant functor
that sends a vector space &lt;script type=&quot;math/tex&quot;&gt;V&lt;/script&gt; to its &lt;em&gt;dual&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;V^*&lt;/script&gt;, namely the vector
space of linear transformations &lt;script type=&quot;math/tex&quot;&gt;V\to k&lt;/script&gt;.
A linear map &lt;script type=&quot;math/tex&quot;&gt;f\colon V \to W&lt;/script&gt; is sent to a map &lt;script type=&quot;math/tex&quot;&gt;f^*\colon W^*\to V^*&lt;/script&gt;
which is defined as follows.
If &lt;script type=&quot;math/tex&quot;&gt;\lambda\colon W \to k&lt;/script&gt; is an element of &lt;script type=&quot;math/tex&quot;&gt;W^*&lt;/script&gt;,
&lt;script type=&quot;math/tex&quot;&gt;f^*(\lambda)&lt;/script&gt; is the linear  map&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\lambda f\colon V\to k.&lt;/script&gt;

&lt;p&gt;Thus there is a &lt;em&gt;covariant&lt;/em&gt; functor sending a vector space &lt;script type=&quot;math/tex&quot;&gt;V&lt;/script&gt;
to its “double dual” &lt;script type=&quot;math/tex&quot;&gt;V^{**}=(V^*)^*&lt;/script&gt;.
There is a natural transformation &lt;script type=&quot;math/tex&quot;&gt;ev&lt;/script&gt; from the identity functor
to the double dual functor.
At a given vector space &lt;script type=&quot;math/tex&quot;&gt;V&lt;/script&gt;, the map &lt;script type=&quot;math/tex&quot;&gt;ev_V&lt;/script&gt; sends a vector &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt;
to the linear map &lt;script type=&quot;math/tex&quot;&gt;V^*\to k&lt;/script&gt; defined by “evaluation at &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt;,”
namely&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\lambda \mapsto \lambda(v),\quad  \lambda \in V^*.&lt;/script&gt;

&lt;p&gt;Naturality of &lt;script type=&quot;math/tex&quot;&gt;ev&lt;/script&gt; asserts that for &lt;script type=&quot;math/tex&quot;&gt;f\colon V \to W&lt;/script&gt;
a linear map, the following diagram commutes&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{CD}
  V @&gt;ev_V&gt;&gt; V^{**} \\
  @VfVV @VVf^{**}V \\
  W @&gt;ev_W&gt;&gt; W^{**}.
\end{CD}&lt;/script&gt;

&lt;p&gt;To show this, consider a vector &lt;script type=&quot;math/tex&quot;&gt;v \in V&lt;/script&gt;.
The element &lt;script type=&quot;math/tex&quot;&gt;f^{**}(ev_V(v)) \in W^{**}&lt;/script&gt; is
the linear map&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;ev_V(v)\circ f^*\colon W^*\to k,&lt;/script&gt;

&lt;p&gt;so its action on &lt;script type=&quot;math/tex&quot;&gt;\lambda \in W*&lt;/script&gt; is&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;ev_V(v)(f^*(\lambda)) = ev_V(v)(\lambda f) = 
\lambda (f(v)) = ev_W(f(v))(\lambda),&lt;/script&gt;

&lt;p&gt;demonstrating naturality.&lt;/p&gt;

&lt;p&gt;The map &lt;script type=&quot;math/tex&quot;&gt;ev_V&lt;/script&gt; is an isomorphism when &lt;script type=&quot;math/tex&quot;&gt;V&lt;/script&gt; is finite dimensional.
Thus we say that when restricted to the &lt;em&gt;subcategory&lt;/em&gt;
of finite dimensional vector spaces, &lt;script type=&quot;math/tex&quot;&gt;ev&lt;/script&gt; is a &lt;em&gt;natural isomorphism.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-yoneda-lemma&quot;&gt;The Yoneda Lemma&lt;/h3&gt;
&lt;p&gt;Perhaps the fundamental result in category theory
is the following:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Theorem.&lt;/strong&gt; (The Yoneda Lemma)    &lt;br /&gt;
 Let &lt;script type=&quot;math/tex&quot;&gt;C&lt;/script&gt; be a locally small category and
 &lt;script type=&quot;math/tex&quot;&gt;F\colon C \to \operatorname{Set}&lt;/script&gt; a functor.
 For each object &lt;script type=&quot;math/tex&quot;&gt;c&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;C&lt;/script&gt;, there is a bijection&lt;/p&gt;
&lt;/blockquote&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\{\alpha\colon C(c,-)\Rightarrow F\} \longleftrightarrow \{x \in Fc\}&lt;/script&gt;

&lt;blockquote&gt;
  &lt;p&gt;implemented by sending a natural transformation
 &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; to the element &lt;script type=&quot;math/tex&quot;&gt;\alpha_c(1_c)&lt;/script&gt;.
 This bijection is natural in &lt;script type=&quot;math/tex&quot;&gt;F&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;c&lt;/script&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The proof is straightforward, once one figures out what needs proving.
The utility of the Yoneda lemma is likely 
far from obvious when one first meets it,
but it turns out to be a major tool in category theory.&lt;/p&gt;</content><author><name></name></author><summary type="html">My office-mate asked me to give a “second lecture” in category theory in Eminar, the Tufts graduate student seminar. I gave a first lecture last semester, but I thought it might be nice to have something to point people who missed it to, in order to stick to my assignment and begin at the Yoneda lemma. So, here is yet another rendition of the first hour of a category theory class.</summary></entry><entry><title type="html">Choo Choo</title><link href="/2019/09/06/Choo-Choo.html" rel="alternate" type="text/html" title="Choo Choo" /><published>2019-09-06T00:00:00-04:00</published><updated>2019-09-06T00:00:00-04:00</updated><id>/2019/09/06/Choo-Choo</id><content type="html" xml:base="/2019/09/06/Choo-Choo.html">&lt;p&gt;Today I posted my first paper, 
&lt;a href=&quot;https://arxiv.org/abs/1909.03097&quot;&gt;Train Tracks, Orbigraphs and CAT(0) Free-by-cyclic Groups&lt;/a&gt;
to the ArXiv! Here is a description of the paper and the idea behind the main application.&lt;/p&gt;

&lt;h3 id=&quot;orbigraphs&quot;&gt;Orbigraphs&lt;/h3&gt;

&lt;p&gt;One of my main goals currently is to better understand outer automorphisms of
free products of finite groups. I became interested because I like &lt;a href=&quot;https://en.wikipedia.org/wiki/Coxeter_group&quot;&gt;Coxeter groups&lt;/a&gt;,
and I was surprised to hear that we knew so little about their automorphisms.
The natural place to start is the “free” Coxeter group &lt;script type=&quot;math/tex&quot;&gt;W_n&lt;/script&gt;, which is a free product of 
&lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; copies of &lt;script type=&quot;math/tex&quot;&gt;\mathbb Z/2\mathbb Z&lt;/script&gt;. I’m tempted to say the 
&lt;em&gt;&lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;th copower of &lt;script type=&quot;math/tex&quot;&gt;\mathbb Z/2\mathbb Z&lt;/script&gt;,&lt;/em&gt; but I guess it’s a little too scary-sounding.&lt;/p&gt;

&lt;p&gt;Along the way I’ve become quite enamored with &lt;a href=&quot;https://en.wikipedia.org/wiki/Orbifold&quot;&gt;orbifolds&lt;/a&gt;. The idea behind
orbifolds is that just as it is useful to study the fundamental group of a manifold both
as a group of homotopy classes of loops and as deck transformations of the universal cover,
so to should there be some object “downstairs” to look at in the case of a group acting
properly discontinuously but not freely.&lt;/p&gt;

&lt;p&gt;An orbigraph, then, is an orbifold quotient of a graph. In other words, the underlying
topological space of an orbigrph is a (typically finite) graph. At a (typically finite)
collection of points called &lt;em&gt;cone points,&lt;/em&gt; there is some nontrivial stabilizer information.
Note that there is the related idea of a &lt;a href=&quot;https://en.wikipedia.org/wiki/Graph_of_groups&quot;&gt;graph of groups&lt;/a&gt;, which is more
general. Since the singular locus of an orbifold is required to be nowhere dense, the term
“orbigraph” succinctly captures the restrictions I require. I also want to think of
orbigraphs as having interesting and nontrivial algebraic topology—in essentially the
same way as in Bass–Serre theory, but I take a slightly less combinatorial bent.&lt;/p&gt;

&lt;p&gt;In the paper the underlying
space of all orbigraphs in question are finite trees, but I am realizing there is maybe some
(small) usefulness in orbigraphs whose underlying graph is not a tree.&lt;/p&gt;

&lt;h3 id=&quot;train-tracks&quot;&gt;Train Tracks&lt;/h3&gt;

&lt;p&gt;The main tool for studying automorphisms of free groups is what are called
&lt;em&gt;relative train track maps.&lt;/em&gt; Relative train track maps provide a topological “normal form”
for elements of &lt;script type=&quot;math/tex&quot;&gt;\operatorname{Out}(F_n)&lt;/script&gt;. They were introduced by Bestvina–Handel in&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;My adaptation to the case of orbigraphs
builds on later developments by Bestvina–Feighn–Handel in 2000 and
Feighn–Handel in 2011. The name “relative train track map” is inspired by the theory
of surface homeomorphisms: there a &lt;em&gt;train track&lt;/em&gt; is a graph embedded into the surface
in a prescribed wy.  The combinatorial properties of certain train tracks associated
to the mapping class of a surface homeomorphism yield a surprisingly rich  amount of
information about the dynamics of the homeomorphism.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The original idea of Bestvina–Handel’s paper was to attempt to adapt the theory
to study outer automorphisms of free groups. Here, since any homeomorphism of a graph
has a finite power homotopic to the identity, we’re forced to consider homotopy equivalences
of graphs. More explicitly: if &lt;script type=&quot;math/tex&quot;&gt;\varphi \in \operatorname{Out}(F_n)&lt;/script&gt; is an outer
automorphism of a free group &lt;script type=&quot;math/tex&quot;&gt;F_n&lt;/script&gt; of rank &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; is a graph, and &lt;script type=&quot;math/tex&quot;&gt;f\colon G \to G&lt;/script&gt;
is a homotopy equivalence such that the (outer) action of &lt;script type=&quot;math/tex&quot;&gt;f&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;\pi_1(G)&lt;/script&gt; is equal
to &lt;script type=&quot;math/tex&quot;&gt;\varphi&lt;/script&gt;, then if &lt;script type=&quot;math/tex&quot;&gt;\varphi&lt;/script&gt; has infinite order, &lt;script type=&quot;math/tex&quot;&gt;f&lt;/script&gt; cannot be a homeomorphism.
We may as well assume &lt;script type=&quot;math/tex&quot;&gt;f&lt;/script&gt; sends vertices to vertices.
Stallings tells us that in this situation, there is a vertex &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and a pair of
edges &lt;script type=&quot;math/tex&quot;&gt;e&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;e'&lt;/script&gt; incident to &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; such that &lt;script type=&quot;math/tex&quot;&gt;f(e)&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;f(e')&lt;/script&gt; share a common segment.
We say &lt;script type=&quot;math/tex&quot;&gt;f&lt;/script&gt; &lt;em&gt;folds&lt;/em&gt; these edges, or that they form an &lt;em&gt;illegal turn&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;train track map&lt;/em&gt; has the next best property: We say that &lt;script type=&quot;math/tex&quot;&gt;f\colon G \to G&lt;/script&gt; is a
&lt;em&gt;train track map&lt;/em&gt; if for each edge &lt;script type=&quot;math/tex&quot;&gt;e&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and each positive integer &lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt;,
the &lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt;th iterate, &lt;script type=&quot;math/tex&quot;&gt;f^k(e)&lt;/script&gt; is an immersed path, i.e. it is never sent over an
illegal turn.&lt;/p&gt;

&lt;p&gt;If you’d like to try playing with the definition here’s something to try: let
&lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; be the “rose with four petals.” That is, &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; has one vertex and four edges,
each of which forms a loop. Label the edges &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; through &lt;script type=&quot;math/tex&quot;&gt;D&lt;/script&gt; and choose an orientation
for each. Let’s define &lt;script type=&quot;math/tex&quot;&gt;f&lt;/script&gt; as &lt;script type=&quot;math/tex&quot;&gt;A \mapsto B&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;B \mapsto C&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;C \mapsto D&lt;/script&gt;, and
&lt;script type=&quot;math/tex&quot;&gt;D \mapsto AB&lt;/script&gt;, i.e. the path that first follows the edge &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; and then &lt;script type=&quot;math/tex&quot;&gt;B&lt;/script&gt;.
There are a few things to check: 1) Find a homotopy inverse for &lt;script type=&quot;math/tex&quot;&gt;f&lt;/script&gt;. 2) Which
turns (pairs of oriented edges originating at a common vertex) are illegal? 3) Is
&lt;script type=&quot;math/tex&quot;&gt;f&lt;/script&gt; a train track map?&lt;/p&gt;

&lt;p&gt;The word &lt;em&gt;relative&lt;/em&gt; above is sort of forced on us by the structure of more complicated 
homotopy equivalences: as it turns out,
it may not be the case that we can always avoid illegal turns.
This is especially true in the “bad” case of polynomial growth, about which more below.&lt;/p&gt;

&lt;h3 id=&quot;cat0-free-by-cyclic-groups&quot;&gt;CAT(0) Free-by-Cyclic Groups&lt;/h3&gt;

&lt;p&gt;Gersten in 1994 showed that &lt;script type=&quot;math/tex&quot;&gt;\operatorname{Out}(F_n)&lt;/script&gt; cannot act
properly and cocompactly on a CAT(0) metric space when &lt;script type=&quot;math/tex&quot;&gt;n \ge 4&lt;/script&gt;.
This is something of a bummer, but also to be expected: Acting by geometrically
on a CAT(0) metric space is a nice situation to be in, and one might think that
&lt;script type=&quot;math/tex&quot;&gt;\operatorname{Out}(F_n)&lt;/script&gt; should be in some sense too complicated to do so.&lt;/p&gt;

&lt;p&gt;I set out aiming to prove a version of Gersten’s theorem for more general free products,
but instead I found essentially a &lt;em&gt;strong negation&lt;/em&gt; of the situation he described.
Let me describe it in more detail:&lt;/p&gt;

&lt;p&gt;Write &lt;script type=&quot;math/tex&quot;&gt;F_n = \langle x_1,\dotsc,x_n\rangle&lt;/script&gt;, let &lt;script type=&quot;math/tex&quot;&gt;\Phi&lt;/script&gt; be an automorphism and suppose
that &lt;script type=&quot;math/tex&quot;&gt;\Phi(x_i) = u_ix_iv_i&lt;/script&gt;, where &lt;script type=&quot;math/tex&quot;&gt;u_i,v_i \in \langle x_1,\dotsc,x_{i-1}\rangle&lt;/script&gt;.
Let’s call such  automorphisms &lt;em&gt;upper triangular,&lt;/em&gt; by analogy with groups of matrices.
In the free-by-cyclic group &lt;script type=&quot;math/tex&quot;&gt;F_n\rtimes_\Phi\mathbb{Z} = \langle x_1,\dotsc,x_n,t\rangle&lt;/script&gt;,
this gives us the relation &lt;script type=&quot;math/tex&quot;&gt;tx_it^{-1} = u_ix_iv_i&lt;/script&gt;, which we can rewrite as
&lt;script type=&quot;math/tex&quot;&gt;x_i^{-1}u_i^{-1}tx_i = v_it&lt;/script&gt;, which, if you squint, starts to look like a relation in
an HNN extension with stable letter &lt;script type=&quot;math/tex&quot;&gt;x_i&lt;/script&gt;. In fact, by our assumption on &lt;script type=&quot;math/tex&quot;&gt;u_i&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v_i&lt;/script&gt;,
we actually do get a description of &lt;script type=&quot;math/tex&quot;&gt;F_n\rtimes\mathbb{Z}&lt;/script&gt; as an iterated HNN extension.&lt;/p&gt;

&lt;p&gt;This situation can be good and bad. Gersten gave an example of such a description of a free-by-cyclic
group which is a “poison subgroup” for nonpositive curvature. There, &lt;script type=&quot;math/tex&quot;&gt;u_i&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v_i&lt;/script&gt;
are such that &lt;script type=&quot;math/tex&quot;&gt;u_i^{-1}t&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v_it&lt;/script&gt; have no business being conjugate in a nice action on a CAT(0) space.
On the other hand, in the situation where they &lt;em&gt;should&lt;/em&gt; be conjugate,
Bridson–Haefliger give a construction that allows you to bootstrap a
geometric action on a CAT(0) space up the HNN extension.&lt;/p&gt;

&lt;p&gt;What I realized was that in the class of automorphisms I was studying,
if it were the case that the automorphism was already upper-triangular
with respect to the basis &lt;script type=&quot;math/tex&quot;&gt;x_1,\dotsc,x_n&lt;/script&gt; we were handed, then
&lt;script type=&quot;math/tex&quot;&gt;u_i^{-1}t&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v_it&lt;/script&gt; were &lt;em&gt;already&lt;/em&gt; conjugate, so Bridson–Haefliger says we win.
So, my goal in constructing relative train track maps was to find a basis
that has this nice property for a (power of) an arbitrary polynomially-growing
outer automorphism. In the paper, the application is in Section 7, while the
heavy lifting is to find a way to adapt the relative train track technology appropriately.&lt;/p&gt;

&lt;p&gt;Since relative train track maps with nice properties have become a foundational
tool in the study of &lt;script type=&quot;math/tex&quot;&gt;\operatorname{Out}(F_n)&lt;/script&gt;, my hope is that this construction
will help in the study of outer automorphism groups of free products.&lt;/p&gt;</content><author><name></name></author><summary type="html">Today I posted my first paper, Train Tracks, Orbigraphs and CAT(0) Free-by-cyclic Groups to the ArXiv! Here is a description of the paper and the idea behind the main application.</summary></entry><entry><title type="html">A Digression</title><link href="/2019/07/13/A-Digression.html" rel="alternate" type="text/html" title="A Digression" /><published>2019-07-13T00:00:00-04:00</published><updated>2019-07-13T00:00:00-04:00</updated><id>/2019/07/13/A-Digression</id><content type="html" xml:base="/2019/07/13/A-Digression.html">&lt;p&gt;I’m not sure what this post set out to be. It ended up a digression
on set theory vs. category theory.&lt;/p&gt;

&lt;p&gt;In modern mathematics, there are two notions that might be truly called 
foundational to all the work we do. These are &lt;em&gt;set theory&lt;/em&gt; and &lt;em&gt;category theory.&lt;/em&gt;
Both theories are living, evolving things with their specialists, constructions
and interesting problems, just like any other field of math, 
but the core ideas are familiar and useful to nearly every mathematician.&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;set,&lt;/em&gt; naively, is just a way to collect a bunch of objects (called &lt;em&gt;elements&lt;/em&gt;)
together. Since a set only cares about membership or lack thereof, duplicate
elements are ignored. When we’re explicit about them, a set is typically
denoted as a list of elements (thought of as unordered), surrounded by curly braces.
So as sets, &lt;script type=&quot;math/tex&quot;&gt;\{1,2,3,3,5\} = \{1,2,3\}&lt;/script&gt;. A set comprises its elements, nothing more,
nothing less. Thus, maps or functions &lt;script type=&quot;math/tex&quot;&gt;f&lt;/script&gt; between sets &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;Y&lt;/script&gt; are just
assignments: to each element &lt;script type=&quot;math/tex&quot;&gt;x&lt;/script&gt; in &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt;, we assign a (unique) element &lt;script type=&quot;math/tex&quot;&gt;f(x)&lt;/script&gt;
of &lt;script type=&quot;math/tex&quot;&gt;Y&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Things, mathematical objects, whatever you can pin down in language,
may be elements (or not) of sets. Sets may even be elements of other sets, although
here is a source of worry. Bertrand Russell observed in 1901 that allowing this
kind of willy-nilly calling things sets yields the mathematical equivalent of the
following silly story: In a small village there is one barber. He shaves the
beards of only those men who does not shave themselves. Who shaves the barber?&lt;/p&gt;

&lt;p&gt;The question, of course, has no good answer. If the barber shaves himself, then
he cannot, but then he must. The mathematical response to Russell’s realization
was to retrench a bit, but it also paved the way for set theory to become an 
interesting field of research in its own right.&lt;/p&gt;

&lt;p&gt;Set theory, thanks to work of Kurt Goedel and many others, has raised thorny,
even unsolvable, problems that mathematicians working in other fields would often
prefer to gloss over. One example is the following: If you have in front of you
a finite collection of sets, maybe think of them as baskets in the produce section,
you can obviously choose an element from each basket. This process is sometimes
called a &lt;em&gt;choice function.&lt;/em&gt; If you imagine an infinitely long aisle at the grocery
store with baskets evenly spaced along it, you might agree that you can still
choose one element from each basket. Even though you won’t live to see it
through, it’s easy to describe a way to decide how to choose the next element;
each basket is eventually reached by you, even though you will never reach 
every basket. This kind of infinity is &lt;em&gt;countably infinite,&lt;/em&gt; like the numbers
we use for counting. But there are more kinds of infinity, and in those cases
it’s maybe not immediately clear that we should still be able to take an object from
each basket. The hypothesis that we &lt;em&gt;can&lt;/em&gt; is called the &lt;em&gt;Axiom of Choice,&lt;/em&gt; and it
turns out to be “independent” of the rest of the rules of set theory we commonly employ.
That is, the rest of set theory &lt;em&gt;can remain true&lt;/em&gt; whatever position we wish to take on
the axiom of choice.&lt;/p&gt;

&lt;p&gt;Category theory, (already touched on implicitly in &lt;a href=&quot;/2019/06/29/The-Category-of-Graphs.html&quot;&gt;The Category of Graphs&lt;/a&gt;) has
a somewhat similar history, although it arose later. Introduced by Samuel Eilenberg
and Saunders Mac Lane in their study of algebraic topology, it has since become
a central perspective in many areas of mathematics and also grown into a field
of interest in its own right. A category is a collection of objects and arrows.
Note that I did not say a &lt;em&gt;set.&lt;/em&gt; This distinction is important theoretically
but in practice categorical and set-theoretic reasoning are typically 
sufficiently different that this can be ignored. In category theory,
the sets themselves comprise a category, typically called &lt;strong&gt;Set&lt;/strong&gt; with
objects sets and arrows functions between sets. This metaphor motivates
the definition: arrows have a &lt;em&gt;domain&lt;/em&gt; and &lt;em&gt;codomain,&lt;/em&gt; just as functions
between sets do. Arrows, like functions, may be &lt;em&gt;composed&lt;/em&gt; (i.e.
“first add four, and then multiply by sixteen”), and the composition is
associative, but need not be commutative.&lt;/p&gt;

&lt;p&gt;This general picture allows one to talk about several different, yet related,
situations together at once. Many common constructions in mathematics, including
“sum” and “product” may be phrased as a certain kind of “universal” construction
in the language of category theory. One such construction, the &lt;em&gt;free object,&lt;/em&gt;
is particularly interesting within group theory. Originally I had meant to talk
about it in this post, but perhaps the next one.&lt;/p&gt;</content><author><name></name></author><summary type="html">I’m not sure what this post set out to be. It ended up a digression on set theory vs. category theory.</summary></entry><entry><title type="html">The Category Of Graphs</title><link href="/2019/06/29/The-Category-of-Graphs.html" rel="alternate" type="text/html" title="The Category Of Graphs" /><published>2019-06-29T00:00:00-04:00</published><updated>2019-06-29T00:00:00-04:00</updated><id>/2019/06/29/The-Category-of-Graphs</id><content type="html" xml:base="/2019/06/29/The-Category-of-Graphs.html">&lt;p&gt;You know the sensation where a familiar word becomes suddenly
completely &lt;em&gt;strange&lt;/em&gt; for no apparent reason? Like suddenly the scales
fall away from your eyes and you see how utterly weird it is that a
concept has a particular name? I’ve been having that feeling with the
word &lt;em&gt;graph&lt;/em&gt; as I use it in math.&lt;/p&gt;

&lt;p&gt;As a kid, you learn how to &lt;em&gt;graph&lt;/em&gt; simple functions in the sense of 
being able to sketch them on a sheet of, say, &lt;em&gt;graph&lt;/em&gt; paper. Millions
of adults probably faintly remember the shape of &lt;script type=&quot;math/tex&quot;&gt;y = x^2&lt;/script&gt; but aren’t
quite sure why.&lt;/p&gt;

&lt;p&gt;To mathematicians and computer scientists, though, for some reason &lt;em&gt;graph&lt;/em&gt;
means something similar, but different: to them a graph is an object with
&lt;em&gt;vertices&lt;/em&gt; and &lt;em&gt;edges&lt;/em&gt;. Indeed, to Serre, that’s literally all a graph is:
a quadruple &lt;script type=&quot;math/tex&quot;&gt;(V,E,\bar{},\iota)&lt;/script&gt;. Two sets, &lt;script type=&quot;math/tex&quot;&gt;V&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;E&lt;/script&gt;, represent the
vertices and (oriented) edges of the graph, and &lt;script type=&quot;math/tex&quot;&gt;\bar{}\colon E \to E&lt;/script&gt; and
&lt;script type=&quot;math/tex&quot;&gt;\iota\colon E \to V&lt;/script&gt; are functions; &lt;script type=&quot;math/tex&quot;&gt;\bar{e}&lt;/script&gt; is the edge &lt;script type=&quot;math/tex&quot;&gt;e&lt;/script&gt; with its
orientation reversed, (so &lt;script type=&quot;math/tex&quot;&gt;\bar{\bar{e}} = e&lt;/script&gt; for any edge &lt;script type=&quot;math/tex&quot;&gt;e&lt;/script&gt;, but
&lt;script type=&quot;math/tex&quot;&gt;\bar e \neq e&lt;/script&gt;), and
&lt;script type=&quot;math/tex&quot;&gt;\iota(e)&lt;/script&gt; represents the initial vertex of the edge &lt;script type=&quot;math/tex&quot;&gt;e&lt;/script&gt;. This lets us
define a function &lt;script type=&quot;math/tex&quot;&gt;\tau\colon E \to V&lt;/script&gt; picking out the &lt;em&gt;terminal&lt;/em&gt; vertex
of an edge by setting &lt;script type=&quot;math/tex&quot;&gt;\tau(e) = \iota(\bar{e})&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;A topologist would prefer to say that a graph is a 1-dimensional CW complex.
So rather than an abstract set of vertices, we have a set of points, &lt;script type=&quot;math/tex&quot;&gt;V&lt;/script&gt;,
the &lt;script type=&quot;math/tex&quot;&gt;0&lt;/script&gt;-cells of our CW complex. And rather than an abstract set of oriented
edges, we have a collection of &lt;script type=&quot;math/tex&quot;&gt;1&lt;/script&gt;-cells (intervals of the real line) 
whose endpoints are attached to &lt;script type=&quot;math/tex&quot;&gt;0&lt;/script&gt;-cells.&lt;/p&gt;

&lt;p&gt;These two descriptions really are in agreement for most purposes. Maybe one would
prefer the more combinatorial description as a way of “rigidifying” some of the
inherent floppiness of topological spaces. At the same time, using topological methods
allows one access to a whole host of techniques that a too-rigid approach might bury
under a sea of formalism.&lt;/p&gt;

&lt;p&gt;But of course, neither definition really squares with the idea of the graph of
&lt;script type=&quot;math/tex&quot;&gt;y = x^2&lt;/script&gt;, hence why I’ve been feeling weird about the word.&lt;/p&gt;

&lt;p&gt;Anyway, the &lt;em&gt;category of graphs&lt;/em&gt;, introduced by John Stallings in
&lt;a href=&quot;https://www2.math.ou.edu/~nbrady/teaching/s11-5863/stallings.pdf&quot;&gt;Topology of Finite Graphs&lt;/a&gt;,
building on work of Serre in &lt;a href=&quot;https://d-nb.info/965816907/04&quot;&gt;Trees&lt;/a&gt;, more about which
almost certainly soon, has (as all categories do)
collections of objects and arrows between them.
Here the objects are graphs and arrows are &lt;em&gt;morphisms of graphs.&lt;/em&gt; 
A morphism &lt;script type=&quot;math/tex&quot;&gt;f\colon G \to H&lt;/script&gt; between
graphs &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt; is a pair of functions &lt;script type=&quot;math/tex&quot;&gt;f_V\colon V(G) \to V(H)&lt;/script&gt; 
and &lt;script type=&quot;math/tex&quot;&gt;f_E\colon E(G) \to E(H)&lt;/script&gt;, such that the following diagrams commute:
&lt;script type=&quot;math/tex&quot;&gt;\require{AMScd}&lt;/script&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{CD}
E(G) @&gt;f_E&gt;&gt; E(H) \\
@V{\iota}VV @V{\iota}VV \\
V(G) @&gt;f_V&gt;&gt; V(H)
\end{CD}\qquad
\begin{CD}
E(G) @&gt;f_E&gt;&gt; E(H) \\
@V\bar{}VV @V\bar{}VV \\
E(G) @&gt;f_E&gt;&gt; E(H)
\end{CD}&lt;/script&gt;

&lt;p&gt;In English what this is saying is that &lt;script type=&quot;math/tex&quot;&gt;f&lt;/script&gt; preserves the graph structure:
it sends edges to edges, vertices to vertices, &lt;script type=&quot;math/tex&quot;&gt;e&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\bar e&lt;/script&gt; are sent
to &lt;script type=&quot;math/tex&quot;&gt;f(e)&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\overline{f(e)}&lt;/script&gt;, and the initial vertex of &lt;script type=&quot;math/tex&quot;&gt;e&lt;/script&gt; is
sent to the initial vertex of &lt;script type=&quot;math/tex&quot;&gt;f(e)&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Stallings emphasizes the rigidity of morphisms in this construction:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;By graph and map of graphs, I mean something purely combinatorial or
algebraic. Pictures can be drawn, but one has to understand that maps are
rigid and not just continuous, maps do not collapse edges or wrap edges
around several edges.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And it’s true; it’s a little challenging to describe precisely which
topological maps between graphs are even homotopic to morphisms without
giving the game (Stallings’ paper) away too quickly!&lt;/p&gt;</content><author><name></name></author><summary type="html">You know the sensation where a familiar word becomes suddenly completely strange for no apparent reason? Like suddenly the scales fall away from your eyes and you see how utterly weird it is that a concept has a particular name? I’ve been having that feeling with the word graph as I use it in math.</summary></entry><entry><title type="html">Hello World</title><link href="/2019/06/22/Hello-World.html" rel="alternate" type="text/html" title="Hello World" /><published>2019-06-22T00:00:00-04:00</published><updated>2019-06-22T00:00:00-04:00</updated><id>/2019/06/22/Hello-World</id><content type="html" xml:base="/2019/06/22/Hello-World.html">&lt;p&gt;Earlier this week,
Marc Weidenbaum of &lt;a href=&quot;https://disquiet.com&quot;&gt;disquiet.com&lt;/a&gt; wrote a &lt;a href=&quot;https://disquiet.com/2019/06/16/word-blog-20th-anniversary-1999/&quot;&gt;paean
to the blog&lt;/a&gt; that I found really inspiring. “Self-publishing,”
he writes, “is the heart of the healthy internet.”&lt;/p&gt;

&lt;p&gt;So hello. Having been given the push I needed, I decided to
move my academic website to its own URL and use it as an excuse 
to start blogging. Since much of the rest of this website is
given over to my career as a mathematician, it’s reasonable to
expect that I will talk about math here, and I expect to get
technical with it when I want to.&lt;/p&gt;

&lt;p&gt;Math is not my only passion. I expect to also talk about
many things related to music. This blog is tentatively titled
Alanza, my middle name, but also my “artist moniker” when 
playing solo. I am a moderator on the &lt;a href=&quot;https://llllllll.co&quot;&gt;lines forum&lt;/a&gt;,
also under the name Alanza.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;This site is built with &lt;a href=&quot;https://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt;, and hosted on
GitHub Pages. On lines I asked several questions about how to get
up and running with a website and got &lt;a href=&quot;https://llllllll.co/t/blogging-platforms/23333?u=alanza&quot;&gt;a wealth of knowledge&lt;/a&gt;
in response. Although, being a millenial, it’s maybe not surprising
that I’d messed around with HTML as a kid, this site is my first time
using CSS. I read what I could on &lt;a href=&quot;https://every-layout.dev&quot;&gt;Every Layout&lt;/a&gt;
to get a feel for what the concerns were, and borrowed their “Sidebar”
primitive. I also appreciated the from-square-one approach of
&lt;a href=&quot;https://internetingishard.com&quot;&gt;Internetting Is Hard&lt;/a&gt; when Every Layout
went over my head. These resources helped get me up to “okay, I can
Google that” speed.
I also should shout out &lt;a href=&quot;https://quuxplusone.github.io/blog/2018/08/05/mathjax-in-jekyll/&quot;&gt;Arthur O’Dwyer&lt;/a&gt; for a helpful
blog post about enabling MathJax in Jekyll—which turns out to be 
surprisingly simple!&lt;/p&gt;

&lt;p&gt;In college, I taught myself a lot of the basics of typesetting,
so it was eye-opening to see how very different the concerns are
when designing for the web. Although the design here is certainly
minimal, it was also surprisingly relatively painless!
One of my goals for this year has been to improve my Vim skills
and incorporate it more into my work. I was very pleased how well
using Jekyll vs. say, WordPress, furthers this goal!&lt;/p&gt;</content><author><name></name></author><summary type="html">Earlier this week, Marc Weidenbaum of disquiet.com wrote a paean to the blog that I found really inspiring. “Self-publishing,” he writes, “is the heart of the healthy internet.”</summary></entry></feed>